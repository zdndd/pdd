{"ast":null,"code":"import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { subscribeToObservable } from '../util/subscribeToObservable';\nexport function fromObservable(input, scheduler) {\n  if (!scheduler) {\n    return new Observable(subscribeToObservable(input));\n  } else {\n    return new Observable(subscriber => {\n      const sub = new Subscription();\n      sub.add(scheduler.schedule(() => {\n        const observable = input[Symbol_observable]();\n        sub.add(observable.subscribe({\n          next(value) {\n            sub.add(scheduler.schedule(() => subscriber.next(value)));\n          },\n\n          error(err) {\n            sub.add(scheduler.schedule(() => subscriber.error(err)));\n          },\n\n          complete() {\n            sub.add(scheduler.schedule(() => subscriber.complete()));\n          }\n\n        }));\n      }));\n      return sub;\n    });\n  }\n} //# sourceMappingURL=fromObservable.js.map","map":null,"metadata":{},"sourceType":"module"}
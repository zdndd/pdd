{"ast":null,"code":"import { fromArray } from '../observable/fromArray';\nimport { scalar } from '../observable/scalar';\nimport { empty } from '../observable/empty';\nimport { concat as concatStatic } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nexport function startWith(...array) {\n  return source => {\n    let scheduler = array[array.length - 1];\n\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n\n    if (len === 1 && !scheduler) {\n      return concatStatic(scalar(array[0]), source);\n    } else if (len > 0) {\n      return concatStatic(fromArray(array, scheduler), source);\n    } else {\n      return concatStatic(empty(scheduler), source);\n    }\n  };\n} //# sourceMappingURL=startWith.js.map","map":null,"metadata":{},"sourceType":"module"}